package com.example.demo.module;

import java.time.ZonedDateTime;
import java.util.Collection;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;

import com.example.demo.entities.Employee;

public interface EmployeeRepository extends JpaRepository<Employee, Long> {
    // Custom methods, e.g., findByAgeAndSalary
  //    List<Employee> findByAgeAndSalary(int age, double salary);
   
        List<Employee> findByName(String name);
        List<Employee> findTop3ByAge();
        List<Employee> findByNameIs(String name);
        List<Employee> findByNameEquals(String name);
        List<Employee> findByNameIsNot(String name);
        List<Employee> findByNameIsNull();
        List<Employee> findByNameIsNotNull();
        List<Employee> findByNameStartingWith(String prefix);
        List<Employee> findByNameEndingWith(String suffix);
        List<Employee> findByNameContaining(String infix);
        List<Employee> findByNameLike(String likePattern);
        List<Employee> findByAgeLessThan(Integer age);
        List<Employee> findByAgeLessThanEqual(Integer age);
        List<Employee> findByAgeGreaterThan(Integer age);
        List<Employee> findByAgeGreaterThanEqual(Integer age);
        List<Employee> findByAgeBetween(Integer startAge, Integer endAge);
        List<Employee> findByAgeIn(Collection<Integer> ages);
        List<Employee> findByJoiningDateAfter(ZonedDateTime joiningDate);
        List<Employee> findByJoiningDateBefore(ZonedDateTime joiningDate);
        List<Employee> findByNameOrJoiningDate(String name, ZonedDateTime joiningDate);
        List<Employee> findByNameOrJoiningDateAndActive(String name, ZonedDateTime joiningDate, Boolean active);
    
   
}

