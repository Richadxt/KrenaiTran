package com.example.demo.module;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.Admin;
import com.example.demo.entity.Login;
import com.example.demo.exception.AuthorizationException;
import com.example.demo.model.LoginRequest;

@Service
public class LoginService {
	
	
	@Autowired
	private  AdminRepository adminRepository;
	

	@Autowired
	private  LoginRepository loginRepository;
	
	
	public Admin logInAdmin(LoginRequest request) {
		
        Admin existingAdmin = adminRepository.findByEmail(request.getEmail());
		
		if(existingAdmin == null) {
			throw new AuthorizationException("Please register your self first!");
		}
		
		Optional<Login> validAdmin = loginRepository.findById(existingAdmin.getId());
		
		if(validAdmin.isPresent()) {
			throw new AuthorizationException("Customer already logged in!");
		}
		
		if(existingAdmin.getPassword().equals(dto.getPassword())) {
			
			String key = RandomString.make(6);
			
			AdminCurrentSession adminCurrentSession = new AdminCurrentSession(existingAdmin.getAdminId(),key,LocalDateTime.now());
			
			aSDao.save(adminCurrentSession);
			
			return adminCurrentSession.toString();
		}
		else {
			throw new AuthorizationException("Please enter a valid password!");
		}
	}
	
	public String logOutAdmin(String uId) {
		return null;
	}
	
	
	public List<Login> getAllLoginDetails() {
        return loginRepository.findAll();
    }
	
	
	
}
